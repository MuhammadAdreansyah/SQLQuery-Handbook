import streamlit as st
import sys
import os
from pathlib import Path

# Add the pages directory to the Python path
pages_dir = Path(__file__).parent / "pages"
sys.path.append(str(pages_dir))

# Import all page modules
try:
    # Define the functions that would normally be imported
    def show_home():
        st.title("Home")
        st.write("Welcome to the MySQL Handbook!")
        
    def show_basic_query():
        st.title("Basic Queries")
        st.write("Learn about basic MySQL queries.")
        
    def show_ddl():
        st.title("DDL Commands")
        st.write("Learn about Data Definition Language commands.")
        
    def show_dml():
        st.title("DML Operations")
        st.write("Learn about Data Manipulation Language operations.")
        
    def show_dcl():
        st.title("DCL Controls")
        st.write("Learn about Data Control Language controls.")
        
    def show_tcl():
        st.title("TCL Management")
        st.write("Learn about Transaction Control Language management.")
        
    def show_aggregate_query():
        st.title("Aggregate Functions")
        st.write("Learn about MySQL aggregate functions.")
        
    def show_query_editor():
        st.title("SQL Query Editor")
        st.write("Try your MySQL queries here.")
except Exception as e:
    st.error(f"Error setting up modules: {e}")
    st.stop()

# Configure page settings
st.set_page_config(
    page_title="MySQL Handbook",
    page_icon="üóÉÔ∏è",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Custom CSS for better styling
st.markdown("""
    <style>
    .main-header {
        font-size: 2.5rem;
        font-weight: bold;
        color: #1f4e79;
        text-align: center;
        margin-bottom: 2rem;
        padding: 1rem;
        background: linear-gradient(90deg, #f0f8ff, #e6f3ff);
        border-radius: 10px;
        border-left: 5px solid #1f4e79;
    }
    
    .sidebar-logo {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 2rem;
    }
    
    .nav-section {
        margin: 1rem 0;
        padding: 0.8rem;
        background-color: #f8f9fa;
        border-radius: 8px;
        border-left: 4px solid #007bff;
    }
    
    .nav-section h4 {
        color: #007bff;
        margin: 0 0 0.5rem 0;
        font-size: 1.1rem;
    }
    
    .metric-container {
        background: white;
        padding: 1rem;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin: 0.5rem 0;
    }
    </style>
""", unsafe_allow_html=True)

def create_sidebar():
    """Create and configure the sidebar with navigation"""
    with st.sidebar:
        # Logo section
        st.markdown('<div class="sidebar-logo">', unsafe_allow_html=True)
        
        # Try to load logo
        logo_path = "assets/logo.png"
        if os.path.exists(logo_path):
            st.image(logo_path, width=180)
        
        st.markdown('</div>', unsafe_allow_html=True)
        
        # Create navigation sections
        nav_sections = []
        
        # Home section
        home_page = st.Page(show_home, title="Home", icon="üè†")
        nav_sections.append(home_page)
        
        # Learning modules section
        learning_pages = [
            st.Page(show_basic_query, title="Basic Queries", icon="üîç"),
            st.Page(show_ddl, title="DDL Commands", icon="üìã"),
            st.Page(show_dml, title="DML Operations", icon="‚úèÔ∏è"),
            st.Page(show_dcl, title="DCL Controls", icon="üîí"),
            st.Page(show_tcl, title="TCL Management", icon="üîÑ"),
            st.Page(show_aggregate_query, title="Aggregate Functions", icon="üìä")
        ]
        
        # Tools section
        tools_pages = [
            st.Page(show_query_editor, title="SQL Query Editor", icon="üíª")
        ]
        
        # Create navigation
        nav = st.navigation({
            "Home": [home_page],
            "Learning Modules": learning_pages,
            "Tools": tools_pages
        })
        
        # Quick Resources section
        st.markdown("### üîó Quick Resources")
        
        # Search functionality
        st.text_input("Search topics...", placeholder="e.g., SELECT, JOIN, INDEX", key="sidebar_search")
        
        # Process search when input is provided
        if st.session_state.sidebar_search:
            search_query = st.session_state.sidebar_search
            # Mock search results
            search_results = {
                "SELECT": "Basic Queries",
                "JOIN": "Basic Queries", 
                "CREATE": "DDL Commands",
                "INSERT": "DML Operations",
                "GRANT": "DCL Controls",
                "COMMIT": "TCL Management",
                "COUNT": "Aggregate Functions"
            }
            
            found_results = [topic for keyword, topic in search_results.items() 
                          if search_query.upper() in keyword]
            
            if found_results:
                for result in found_results[:3]:  # Show top 3 results
                    st.markdown(f"‚Ä¢ {result}")
            else:
                st.write("No results found. Try different keywords.")
        
        # Documentation and Tips in the same section
        col1, col2 = st.columns(2)
        
        with col1:
            with st.expander("üìñ Docs"):
                st.markdown("""
                - [MySQL Docs](https://dev.mysql.com/doc/)
                - [SQL Tutorial](https://www.w3schools.com/sql/)
                """)
        
        with col2:
            with st.expander("üí° Tips"):
                st.info("üí° Use EXPLAIN for query analysis")
                st.warning("‚ö†Ô∏è Always test first!")
        
        return nav

def main():
    """Main application function"""
    
    # Create sidebar and get navigation
    nav = create_sidebar()
    
    # Run the selected page
    nav.run()
        
    # Theme toggle at the bottom of sidebar
    with st.sidebar:
        # Version info
        st.markdown("---")
        theme_col1, theme_col2 = st.columns(2)
        with theme_col1:
            if st.button("üåô Dark", help="Switch to dark theme"):
                st.info("Theme switching coming soon!")
        with theme_col2:
            if st.button("‚òÄÔ∏è Light", help="Switch to light theme"):
                st.info("Theme switching coming soon!")
        
        st.caption("MySQL Handbook v2.0 | Built with ‚ù§Ô∏è using Streamlit")

if __name__ == "__main__":
    main()
